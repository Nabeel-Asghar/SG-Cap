{"version":3,"sources":["generic-cover.jpg","Components/CoverCarousel.js","Components/Chart.js","Components/TextInput.js","Pages/Home.js","Utils/Constants.js","App.js","reportWebVitals.js","index.js"],"names":["CoverCarousel","props","covers","console","log","additionalTransfrom","arrows","autoPlay","autoPlaySpeed","className","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","centerMode","responsive","desktop","breakpoint","max","min","items","partialVisibilityGutter","showDots","sliderClass","slidesToSlide","swipeable","map","book","href","link","target","coverId","src","style","minHeight","width","genericCover","title","author","Chart","chartData","BarChart","height","data","margin","top","right","left","bottom","onMouseOver","handleChartClick","activePayload","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Bar","fill","TextInput","onSubmit","type","placeholder","name","id","required","value","onChange","htmlFor","color","idleText","borderRadius","size","messageDuration","animation","buttonState","onSubmit1","currentResults","totalResults","marginBottom","disabled","Home","handleQueryChange","event","preventDefault","setState","query","getFromApi","page","reset","loading","axios","get","params","q","state","then","res","numFound","docs","forEach","doc","decade","parseInt","first_publish_year","docObj","author_name","year","key","cover_i","push","setChartData","finally","getMoreData","Object","entries","String","results","length","payload","e","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb946e62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/generic-cover.9efb5c56.jpg\";","import React from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport genericCover from \"../generic-cover.jpg\";\nimport \"../SharedStyles.scss\";\n\nfunction CoverCarousel(props) {\n  const { covers } = props;\n  console.log(covers);\n  return (\n    <Carousel\n      additionalTransfrom={0}\n      arrows\n      autoPlay\n      autoPlaySpeed={2000}\n      className=\"\"\n      containerClass=\"container-with-dots\"\n      dotListClass=\"\"\n      draggable\n      focusOnSelect={false}\n      infinite\n      itemClass=\"\"\n      keyBoardControl\n      minimumTouchDrag={80}\n      renderButtonGroupOutside={false}\n      renderDotsOutside={false}\n      centerMode={true}\n      responsive={{\n        desktop: {\n          breakpoint: {\n            max: 3000,\n            min: 1024,\n          },\n          items: 5,\n          partialVisibilityGutter: 40,\n        },\n      }}\n      showDots={false}\n      sliderClass=\"\"\n      slidesToSlide={2}\n      swipeable\n    >\n      {covers &&\n        covers.map((book) => {\n          return (\n            <a href={book.link} target={\"_blank\"}>\n              {book.coverId ? (\n                <img\n                  key={book.coverId}\n                  src={book.coverId}\n                  style={{ minHeight: \"100%\", width: \"95%\" }}\n                />\n              ) : (\n                <div className=\"container\">\n                  <img\n                    src={genericCover}\n                    style={{ minHeight: \"100%\", width: \"95%\" }}\n                  />\n                  <div className=\"centered\">{`${book.title} by ${book.author}`}</div>\n                </div>\n              )}\n            </a>\n          );\n        })}\n    </Carousel>\n  );\n}\n\nexport default CoverCarousel;\n","import { Bar, BarChart, CartesianGrid, Tooltip, XAxis, YAxis } from \"recharts\";\nimport React from \"react\";\n\nfunction Chart(props) {\n  const chartData = props.chartData;\n\n  return (\n    props.chartData && (\n      <BarChart\n        width={750}\n        height={500}\n        data={chartData}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n        onMouseOver={(data) =>\n          data && props.handleChartClick(data.activePayload[0])\n        }\n        style={{ margin: \"0 auto\" }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"results\" fill=\"#338f4d\" />\n      </BarChart>\n    )\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\nimport ReactiveButton from \"reactive-button\";\nimport \"../SharedStyles.scss\";\n\nfunction TextInput(props) {\n  return (\n    <div>\n      <div className=\"form__group field\">\n        <form onSubmit={props.onSubmit}>\n          <input\n            type=\"input\"\n            className=\"form__field\"\n            placeholder=\"Name\"\n            name=\"name\"\n            id=\"name\"\n            required\n            value={props.value}\n            onChange={props.onChange}\n          />\n          <label htmlFor=\"name\" className=\"form__label\">\n            Name\n          </label>\n          <ReactiveButton\n            color=\"green\"\n            type={\"submit\"}\n            idleText={\"Submit\"}\n            style={{ borderRadius: \"5px\", margin: \"15px 0px 0px 0px\" }}\n            size={\"normal\"}\n            messageDuration={2000}\n            width={\"100%\"}\n            animation={true}\n            buttonState={props.buttonState}\n          />\n        </form>\n      </div>\n      {props.chartData && (\n        <div className=\"form__group field\">\n          <form onSubmit={props.onSubmit1}>\n            <ReactiveButton\n              color=\"dark\"\n              type={\"submit\"}\n              idleText={`Get More Results ${props.currentResults} / ${props.totalResults}\n              `}\n              style={{ borderRadius: \"5px\", marginBottom: \"30px\" }}\n              size={\"normal\"}\n              messageDuration={2000}\n              width={\"100%\"}\n              animation={true}\n              buttonState={props.buttonState}\n              disabled={props.currentResults === props.totalResults}\n            />\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TextInput;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../SharedStyles.scss\";\nimport { baseApi, baseUrl, coverSize, coversUrl } from \"../Utils/Constants\";\nimport CoverCarousel from \"../Components/CoverCarousel\";\nimport Chart from \"../Components/Chart\";\nimport TextInput from \"../Components/TextInput\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      totalResults: null,\n      currentResults: 0,\n      data: {},\n      chartData: null,\n      page: 1,\n      covers: [],\n      loading: \"idle\",\n    };\n  }\n\n  handleQueryChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  getFromApi = (event, page, reset) => {\n    event.preventDefault();\n    if (reset) {\n      this.setState({\n        currentResults: 0,\n        covers: [],\n      });\n    }\n    this.setState({ loading: \"loading\" });\n    axios\n      .get(baseApi, {\n        params: { q: this.state.query, page: page },\n      })\n      .then((res) => {\n        if (res) {\n          const totalResults = res.data.numFound;\n          const docs = page === 1 ? {} : this.state.data;\n          let currentResults = this.state.currentResults;\n\n          if (totalResults > 0) {\n            res.data.docs.forEach((doc) => {\n              currentResults += 1;\n              const decade = parseInt(doc.first_publish_year / 10, 10) * 10;\n              const docObj = {\n                title: doc.title,\n                author: doc.author_name ? doc.author_name[0] : \"Unknown\",\n                year: doc.first_publish_year,\n                link: baseUrl + doc.key,\n                coverId: doc.cover_i\n                  ? coversUrl + doc.cover_i + coverSize\n                  : null,\n              };\n\n              if (!decade) {\n                if (docs[\"Unknown\"]) {\n                  docs[\"Unknown\"].push(docObj);\n                } else {\n                  docs[\"Unknown\"] = [docObj];\n                }\n              } else {\n                if (docs[decade]) {\n                  docs[decade].push(docObj);\n                } else {\n                  docs[decade] = [docObj];\n                }\n              }\n            });\n          }\n\n          this.setState(\n            {\n              currentResults,\n              totalResults,\n              data: docs,\n              page,\n            },\n            () => this.setChartData()\n          );\n        }\n      })\n      .finally(() => this.setState({ loading: \"idle\" }));\n  };\n\n  getMoreData = (event) => {\n    this.getFromApi(event, this.state.page + 1);\n  };\n\n  setChartData = () => {\n    const data = this.state.data;\n    const chartData = [];\n\n    for (const [key, value] of Object.entries(data)) {\n      chartData.push({\n        name: String(key),\n        results: value.length,\n      });\n    }\n\n    this.setState({ chartData });\n  };\n\n  handleChartClick = (data) => {\n    const covers = this.state.data[data.payload.name];\n    this.setState({ covers });\n  };\n\n  render() {\n    return (\n      <div className=\"homeContainer\">\n        <h6>OpenLibrary Search by Nabeel Asghar</h6>\n\n        <TextInput\n          onSubmit={(e) => this.getFromApi(e, 1, true)}\n          value={this.state.query}\n          onChange={this.handleQueryChange}\n          buttonState={this.state.loading}\n          chartData={this.state.chartData}\n          onSubmit1={(e) => this.getMoreData(e)}\n          currentResults={this.state.currentResults}\n          totalResults={this.state.totalResults}\n        />\n\n        <div className={\"graph-container\"}>\n          <Chart\n            chartData={this.state.chartData}\n            handleChartClick={this.handleChartClick}\n          />\n        </div>\n\n        <CoverCarousel covers={this.state.covers} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","export const baseUrl = \"http://openlibrary.org\";\nexport const baseApi = \"http://openlibrary.org/search.json\";\nexport const coversUrl = \"https://covers.openlibrary.org/b/id/\";\nexport const coverSize = \"-M.jpg\";\n","import \"./App.css\";\nimport Home from \"./Pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}